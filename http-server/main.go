// Code generated by hertz generator.
package main

import (
	"context"
	"encoding/json"
	"log"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/cloudwego/kitex/pkg/klog"
	"github.com/tim-pipi/cloudwego-api-gateway/http-server/clientpool"
)

func main() {
	h := server.Default(
		server.WithHostPorts("127.0.0.1:8080"),
	)

	cp := clientpool.NewClientPool("./idl")

	h.Use(func(c context.Context, ctx *app.RequestContext) {
		// log.Printf("Sample middleware pre-handler")
		ctx.Next(c)
		log.Printf("Request status code: %d", ctx.Response.StatusCode())
	})

	h.Any("/:ServiceName/:ServiceMethod", func(c context.Context, ctx *app.RequestContext) {
		// Check that JSON is valid
		var req interface{}
		err := json.Unmarshal(ctx.Request.BodyBytes(), &req)

		if err != nil {
			klog.Error("Invalid JSON: ", err.Error())
			ctx.Error(err)
			errorJSON := map[string]interface{}{
				"error": ctx.Errors.Errors(),
			}

			ctx.JSON(consts.StatusBadRequest, errorJSON)
			return
		}

		cp.Call(c, ctx)
	})

	h.Spin()
}
